// Cynhyrchwyd y ffeil hon yn awtomatig. PEIDIWCH Ã‚ MODIWL
// This file is automatically generated. DO NOT EDIT

// eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-ignore: Unused imports
import { Create as $Create } from "@wailsio/runtime";

export enum CategoryShort {
    /**
     * The Go zero value for the underlying type of the enum.
     */
    $zero = "",

    PlannedWorkCategory = "A",
    UnplannedWorkCategory = "O",
    MeetingsCategory = "M",
    MaintenanceCategory = "W",
    SupportCategory = "S",
    MiscellaneousCategory = "V",
};

/**
 * A summary entry for a specific task
 */
export class SummaryEntry {
    /**
     * The task short code (e.g. "A" for planned work)
     */
    "TaskShort": TaskShort;

    /**
     * The full name of the task (e.g. "Planned Work")
     */
    "TaskName": string;

    /**
     * The category short code (e.g. "M" for meetings)
     */
    "CategoryShort": CategoryShort;

    /**
     * The full name of the category (e.g. "Meetings")
     */
    "CategoryName": string;

    /**
     * Number of tasks for this entry
     */
    "CountTasks": number;

    /**
     * Minutes expected for this task
     * If zero, no expectation is set
     */
    "ExpectedMinutes": number;

    /**
     * Minutes actually received for this task
     */
    "ReceivedMinutes": number;

    /**
     * Factor of received minutes to expected minutes
     * If ExpectedMinutes is zero, this will also be zero.
     * NOTE: This is a factor between 0 and 1, not a percentage.
     */
    "FactorOfExpected": number;

    /**
     * Factor of received minutes to total minutes
     * NOTE: This is a factor calculated over all tasks in the timebook.
     * NOTE: This is a factor between 0 and 1, not a percentage.
     */
    "FactorOfTotal": number;

    /** Creates a new SummaryEntry instance. */
    constructor($$source: Partial<SummaryEntry> = {}) {
        if (!("TaskShort" in $$source)) {
            this["TaskShort"] = TaskShort.$zero;
        }
        if (!("TaskName" in $$source)) {
            this["TaskName"] = "";
        }
        if (!("CategoryShort" in $$source)) {
            this["CategoryShort"] = CategoryShort.$zero;
        }
        if (!("CategoryName" in $$source)) {
            this["CategoryName"] = "";
        }
        if (!("CountTasks" in $$source)) {
            this["CountTasks"] = 0;
        }
        if (!("ExpectedMinutes" in $$source)) {
            this["ExpectedMinutes"] = 0;
        }
        if (!("ReceivedMinutes" in $$source)) {
            this["ReceivedMinutes"] = 0;
        }
        if (!("FactorOfExpected" in $$source)) {
            this["FactorOfExpected"] = 0;
        }
        if (!("FactorOfTotal" in $$source)) {
            this["FactorOfTotal"] = 0;
        }

        Object.assign(this, $$source);
    }

    /**
     * Creates a new SummaryEntry instance from a string or object.
     */
    static createFrom($$source: any = {}): SummaryEntry {
        let $$parsedSource = typeof $$source === 'string' ? JSON.parse($$source) : $$source;
        return new SummaryEntry($$parsedSource as Partial<SummaryEntry>);
    }
}

/**
 * A task short code (e.g. "A" for planned work)
 */
export enum TaskShort {
    /**
     * The Go zero value for the underlying type of the enum.
     */
    $zero = "",

    PlannedWork = "A",
    UnplannedWork = "O",
    Deployments = "D",
    Meetings = "M",
    Support = "S",
    Maintenance = "W",
    Miscellaneous = "V",
};

/**
 * Summary of timebook entries including total minutes
 */
export class TimebookSummary {
    "Entries": SummaryEntry[];
    "TotalMins": number;

    /** Creates a new TimebookSummary instance. */
    constructor($$source: Partial<TimebookSummary> = {}) {
        if (!("Entries" in $$source)) {
            this["Entries"] = [];
        }
        if (!("TotalMins" in $$source)) {
            this["TotalMins"] = 0;
        }

        Object.assign(this, $$source);
    }

    /**
     * Creates a new TimebookSummary instance from a string or object.
     */
    static createFrom($$source: any = {}): TimebookSummary {
        const $$createField0_0 = $$createType1;
        let $$parsedSource = typeof $$source === 'string' ? JSON.parse($$source) : $$source;
        if ("Entries" in $$parsedSource) {
            $$parsedSource["Entries"] = $$createField0_0($$parsedSource["Entries"]);
        }
        return new TimebookSummary($$parsedSource as Partial<TimebookSummary>);
    }
}

// Private type creation functions
const $$createType0 = SummaryEntry.createFrom;
const $$createType1 = $Create.Array($$createType0);
